<!--START GLOBAL VARIABLES -->
<script type="text/javascript">
  fieldDepartment = document.getElementById('Department');
  fieldJobRole = document.getElementById('Job_Role__c');
  fieldMarketingCountry = document.getElementById('Marketing_Country__c');
  mktoTokenJobRole = "{{lead.Job Role}}";
  mktoTokenDepartment = "{{lead.Department}}";

  listExpressCountries = ["Canada","Germany","Australia"];

  listDepartment = ["Marketing","Sales","Finance","Accounting","Purchasing"];

  marketingJobRoles = ["Business Operations", "Content Marketer", "Copywriter", "Corporate Communications", "Creative", "Demand Generation", "Editor", "Event Management", "Field Marketing", "Intern", "Marketing Analyst", "Marketing Automation", "Marketing Leadership", "Marketing Operations", "Product Marketer", "Project Manager", "Public Relations", "Sales Operations", "SEO", "Social", "Other"]

  salesJobRoles = ["Business Operations", "Demand Generation", "Sales Leadership", "Sales Operations", "Sales Representative", "Other"]

  accountingJobRoles = ["Accounts Payable", "Business Operations", "Marketing Operations", "Procurement", "Sales Operations", "Other"]
</script>
<!--END GLOBAL VARIABLES -->


<!--START PRE-POPULATE PICKLISTS-->
<script type="text/javascript">
  function prePopulatePicklists() {

    // 0: Field ID | 1: Marketo Token
    var arrayPrepopSelect = [
      [document.getElementById('Marketing_Country__c'), "{{lead.Marketing Country}}"],
      [document.getElementById('Title_Category__c'), "{{lead.Title Category}}"],
      [document.getElementById('Department'), "{{lead.Department}}"],
      [document.getElementById('Job_Role__c'), "{{lead.Job Role}}"],
      [document.getElementById('Marketing_Automation__c'), "{{lead.Marketing Automation}}"],
      [document.getElementById('Business_Type__c'), "{{lead.Business Type}}"]
    ]

    for (var i = 0; i < arrayPrepopSelect.length; i++) { //Loop through the number of fields defined above
      for (var x=0; x<arrayPrepopSelect[i][0].length; x++) { //Loop through the number of options in the drop down
        if (arrayPrepopSelect[i][1]==arrayPrepopSelect[i][0].options[x].value) {
          arrayPrepopSelect[i][0].value = arrayPrepopSelect[i][1];
          break;
        }
      }
    }
  }
</script>
<!--END PRE-POPULATE PICKLISTS-->

<!--START PROPULATE JOB ROLE OPTIONS-->
<script>
function populateJobRoleOptions() {

  //Marketing
  if (fieldDepartment.value == "Marketing") {
    //1) Remove all values in the Job Role picklist
    fieldJobRole.options.length = 0;
    //2) Add the default Job Role value back into the picklist as the selected option
    fieldJobRole.options[fieldJobRole.options.length] = new Option('Job Role...', '', true, true);
    //3) Populate Job Role with values from the Marketing rray (defined above)
    for(index in marketingJobRoles) {
        fieldJobRole.options[fieldJobRole.options.length] = new Option(marketingJobRoles[index], marketingJobRoles[index]);
    }
  }

  //Sales
  if (fieldDepartment.value == "Sales") {
    fieldJobRole.options.length = 0;
    fieldJobRole.options[fieldJobRole.options.length] = new Option('Job Role...', '', true, true);
    for(index in salesJobRoles) {
        fieldJobRole.options[fieldJobRole.options.length] = new Option(salesJobRoles[index], salesJobRoles[index]);
    }
  }

  //Accounting, Finance or Purchasing
  if (fieldDepartment.value == "Accounting" || fieldDepartment.value == "Finance" || fieldDepartment.value == "Purchasing") {
    fieldJobRole.options.length = 0;
    fieldJobRole.options[fieldJobRole.options.length] = new Option('Job Role...', '', true, true);
    for(index in accountingJobRoles) {
        fieldJobRole.options[fieldJobRole.options.length] = new Option(accountingJobRoles[index], accountingJobRoles[index]);
    }
  }

  //Not Applicable
  if(listDepartment.indexOf(fieldDepartment.value) == -1){
    fieldJobRole.options.length = 0;
    fieldJobRole.options[fieldJobRole.options.length] = new Option('Not Applicable', 'Not Applicable', false, true);
  }

}

</script>
<!--END PROPULATE JOB ROLE OPTIONS-->

<!--START PRE-POPULATE JOB ROLE-->
<script type="text/javascript">
  function prePopulateJobRole() {

    //Marketing
    if(marketingJobRoles.indexOf(mktoTokenJobRole) !== -1){
      fieldJobRole.value = mktoTokenJobRole;
    }

    //Sales
    if(salesJobRoles.indexOf(mktoTokenJobRole) !== -1){
      fieldJobRole.value = mktoTokenJobRole;
    }

    //Accounting, Finance or Purchasing
    if(accountingJobRoles.indexOf(mktoTokenJobRole) !== -1){
      fieldJobRole.value = mktoTokenJobRole;
    }

    //Not Applicable
    if(listDepartment.indexOf(fieldDepartment.value) == -1){
      fieldJobRole.value = "Not Applicable";
    }


    //Not Applicable
    /*
    if(fieldDepartment.value !== "" && mktoTokenJobRole == "Not Applicable" && listDepartment.indexOf(fieldDepartment.value) == -1){
      //hasProperJobRoleCombo = true;
    }*/

  }

</script>
<!--END PRE-POPULATE JOB ROLE-->


<!--START FORM RESET-->
<script>/*
function clearFormShowHide() {

  var hideKnownFieldsValue = ${mkto-form-showhide};
  //var hideKnownFieldsValue = false;

  if (hideKnownFieldsValue == true) {
    hideKnownFields(); //hide fields and remove requirement

    $('#clearForm').on('click', function() {
      $("#kapostmktoform")[0].reset(); //clears validation, but Marketo tokens return
      $('#kapostmktoform').find('input:text, input:password, select, textarea').val(''); //clears Marketo tokens out of fields
      showAllFields(); //show all fields again and make them required again
    });

  } else {

    $('#clearForm').on('click', function() {
      $("#kapostmktoform")[0].reset(); //clears validation, but Marketo tokens return
      $('#kapostmktoform').find('input:text, input:password, select, textarea').val(''); //clears Marketo tokens out of fields
    });

  }

} */
</script>
<!--END FORM RESET-->


<!--START HIDE NEWSLETTER OPTION FOR SUBSCRIBERS-->
<script type="text/javascript">
var newsletterWrapper = document.getElementById('newsletter-wrapper');

if ("{{lead.Subscribed to Newsletter}}" == 1) {
  $(newsletterWrapper).fadeOut();
} else {
  $(newsletterWrapper).fadeIn();
}

</script>
<!--END HIDE NEWSLETTER OPTION FOR SUBSCRIBERS-->

<script>
//Privacy Policy Show/Hide
function checkForExpressCountry() {

  var wrapperPrivacyStatement = document.getElementById('privacy-statement');

  //if the user's Country value is Canada, etc., add privacy statement to layout
  if(listExpressCountries.indexOf(fieldMarketingCountry.value) !== -1){
    $(wrapperPrivacyStatement).fadeIn();
  } else {
    $(wrapperPrivacyStatement).fadeOut();
  }

}

  $("[id=Marketing_Country__c]").change(checkForExpressCountry);
</script>



<!--START SHOW/HIDE PRE-POPULATED FORM FIELDS-->
<script type="text/javascript">

function showHideFields() {


  var arrayShowHideFieldID = [
    [document.getElementById('FirstName'), "{{lead.First Name}}"],
    [document.getElementById('LastName'), "{{lead.Last Name}}"],
    [document.getElementById('Phone'), "{{lead.Phone Number}}"],
    [document.getElementById('Company'), "{{company.Company Name}}"],
    [document.getElementById('Title_Category__c'), "{{lead.Title Category}}"],
    [document.getElementById('Marketing_Automation__c'), "{{lead.Marketing Automation}}"],
    [document.getElementById('Business_Type__c'), "{{lead.Business Type}}"]
  ]

/*
  //If correct combo, hide Department and Job Role by adding it to arrayShowHideFieldID
  if (hasProperJobRoleCombo == true) {
    arrayShowHideFieldID.push(
      [document.getElementById('Department'), "{{lead.Department}}"],
      [document.getElementById('Job_Role__c'), "{{lead.Job Role}}"]
    );
  }

  //If incorrect combo, hide only Job Role by adding it to arrayShowHideFieldID (let Department logic turn it back on), reset Department and Job Role
  if (hasProperJobRoleCombo == false) {
    arrayShowHideFieldID.push(
      [document.getElementById('Job_Role__c'), "{{lead.Job Role}}"]
    );
    document.getElementById('Department').value = "";
    document.getElementById('Job_Role__c').value = "";

  } */

  for (var i = 0; i < arrayShowHideFieldID.length; i++) { //Loop through the number of fields defined above


      if (arrayShowHideFieldID[i][1] !== "") {
        //If the field has a value in Marketo, then hide the field and ignore validation by adding Ignore class
        $(arrayShowHideFieldID[i][0]).parents('div').eq(0).fadeOut();
        $(arrayShowHideFieldID[i][0]).parents('fieldset').eq(0).fadeOut();
        $(arrayShowHideFieldID[i][0]).addClass("ignore");
      } else {
        //If the field does not have value in Marketo, then show it and add validation by removing Ignore class
        $(arrayShowHideFieldID[i][0]).parents('div').eq(0).fadeIn();
        $(arrayShowHideFieldID[i][0]).parents('fieldset').eq(0).fadeIn();
        $(arrayShowHideFieldID[i][0]).removeClass("ignore");

      }

    }

}
</script>
<!--END SHOW/HIDE PRE-POPULATED FORM FIELDS-->

<script>
//START VALIDATION CONFIG + REMOVE COOKIES ON SUBMIT

$("#kapostmktoform").validate({

  ignore: ".ignore",
  rules: {
    FirstName: {required: true},
    LastName: {required: true},
    Email: {required: true, email: true},
    Phone: {required: true},
    Company: {required: true},
    Marketing_Country__c: {required: true},
    Title_Category__c: {required: true},
    Department: {required: true},
    Job_Role__c:
    { required:
      { depends:
        function () { //Start Function

          //If the value in the Department field is in the list of Departments (defined above), make Job Role required
          //NOTE: N/A being autoselected doesn't clear the required warning message. might have to show/hide it with field
          if( $.inArray(fieldDepartment.value, listDepartment) != -1){
            return true; //required
          } else {
            return false; //not required
          }

        } //End Function
      } //End Depends
    }, //End Required
    Marketing_Automation__c: {required: true},
    Business_Type__c: {required: true},
    legalCheckbox:
    { required:
      { depends:
        function () { //Start Function

          //Gets values from the function called "checkForExpressCountry"
          if(listExpressCountries.indexOf(fieldMarketingCountry.value) !== -1){
            return true; //required
          } else {
            return false; //not required
          }

        } //End Function
      } //End Depends
    } //End Required
  }, //End Rules

  submitHandler: function($form) {
    Cookies.remove('kapostsearch', { domain: 'kapost.com' });
    Cookies.remove('kapostsocial', { domain: 'kapost.com' });
    Cookies.remove('kapostsource', { domain: 'kapost.com' });
    Cookies.remove('kapostpaid', { domain: 'kapost.com' });
    Cookies.remove('kapostsearch');
    Cookies.remove('kapostsocial');
    Cookies.remove('kapostsource');
    Cookies.remove('kapostpaid');
    alert("submit hander function ran");
    form.submit();
  }

}); //End .validate


</script>
